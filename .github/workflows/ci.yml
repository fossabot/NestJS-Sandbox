# Main workflow for this application to provide continuous integration steps like 
# - check for dependency updates (ncu)
# - coverage
# - build
# - release and changelog automation
name: CI Pipeline

# settings when the pipeline is triggered
on:
  push:
    branches:
      - main
      
  # allow manual runs
  workflow_dispatch:

# permissions for this workflow
permissions:
  contents: write
  pull-requests: write

# The jobs, this workflow runs
jobs:
  check_dependencies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install

      - name: Check for package updates
        run: npx ncu --doctor -u

      - name: Check if package.json has changed
        id: check_package_json
        run: git diff --quiet HEAD -- package.json || echo "::set-output name=changed::true"

      - name: Persist changes in package.json
        if: steps.check_package_json.outputs.changed == 'true'
        run: |
          git add package.json package-lock.json
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git commit -m "chore: Update dependencies"
          git push

  coverage:
    name: Coverage Report (CodeCov)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
        
      - name: Install Dependencies
        run: npm ci

      - name: Create Coverage Report
        run: npm run test:cov

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
  
  build:
    runs-on: ubuntu-latest
    needs: [ check_dependencies, coverage ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for dependency updates
        id: check_updates
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          current_sha=$(git rev-parse HEAD)
          latest_sha=$(curl --silent --header "Authorization: token $GITHUB_TOKEN" \
          https://api.github.com/repos/${{ github.repository }}/commits/${{ github.head_ref }} \
          | jq -r '.sha')
          if [[ "$current_sha" != "$latest_sha" ]]; then
          echo "::set-output name=updated::true"
          fi

      - name: Pull latest changes
        if: steps.check_updates.outputs.updated == 'true'
        run: git pull

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm ci

      - name: Build the application
        run: npm run build

  release-please:
    needs:
      - build

    runs-on: ubuntu-latest

    steps:
      - name: create release and changelog
        uses: google-github-actions/release-please-action@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node